default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind

variables:
  # When you use the dind service, you must instruct Docker to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket. Docker 19.03 does this automatically
  # by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/services/#accessing-the-services.
  #
  # Specify to Docker where to create the certificates. Docker
  # creates them automatically on boot, and creates
  # `/certs/client` to share between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"
  # custom shared variables
  IMAGE_NAME: meal-provider-frontend
  TAG: $CI_COMMIT_SHA
  FULL_IMAGE_PATH: ${CTR_REGISTRY_HOST}/${PROJECT_ID}/${CTR_REPOSITORY}/${IMAGE_NAME}:${TAG}

stages:
  - docker_push
  - kubernetes_deploy

docker_push:
  stage: docker_push
  tags:
    - docker
    - cn
  # services:
  #   - docker:24.0.5-dind
  # image: docker:24.0.5
  before_script:
    - echo $GCLOUD_SERVICE_KEY | base64 -d -i | docker login -u _json_key --password-stdin ${CTR_REGISTRY_HOST}
  script:
    - docker --version
    - docker pull alpine:latest
    - docker tag alpine:latest ${FULL_IMAGE_PATH}
    - docker push ${FULL_IMAGE_PATH}

kubernetes_deploy:
  stage: kubernetes_deploy
  needs: ["docker_push"]
  tags:
    - docker
    - cn
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - echo "kubernets deploy..."
    - kubectl version --client
    - kubectl get service --kubeconfig $KUBECONFIG_KARMADA_API_SERVER


